// ==UserScript==
// @name         2 Universal Bookmarklet Menu
// @namespace    http://tampermonkey.net/
// @version      1.2
// @description  Shows a menu on tap with specified bookmarklets, including ChatGPT and Gemini integration, active on all websites.
// @author       Your Name (with additions)
// @match        *://*/*
// @grant        GM_addStyle
// @require      https://cdn.jsdelivr.net/npm/turndown@7.1.1/dist/turndown.min.js
// ==/UserScript==

(function() {
    'use strict';

    // --- Bookmarklet Definitions ---
    const bookmarklets = [
        {
            name: "✨ SUMMARIZE",
            code: function() {
                var selection = window.getSelection().toString().trim();
                if (selection) {
                    location.href = "https://kagi.com/summarizer/?target_language=&summary=takeaway#" + encodeURIComponent(selection);
                } else {
                    location.href = "https://kagi.com/summarizer/index.html?target_language=&summary=takeaway&url=" + encodeURIComponent(location.href);
                }
            }
        },
        {
            name: "💾 SAVE_MARKDOWN",
            code: function() {
                // TurndownService is pre-loaded via @require for better reliability
                function saveMarkdown(md, filename) {
                    var blob = new Blob([md], { type: 'text/markdown' });
                    var a = document.createElement('a');
                    a.href = URL.createObjectURL(blob);
                    a.download = filename;
                    a.style.display = 'none';
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                    URL.revokeObjectURL(a.href); // Clean up
                }

                try {
                    if (typeof TurndownService === 'undefined') {
                        console.error("TurndownService is not available. SAVE_MARKDOWN will not work.");
                        alert("TurndownService is not available. SAVE_MARKDOWN will not work.");
                        return;
                    }
                    var turndownService = new TurndownService();
                    // Attempt to get a cleaner version of the page content if possible
                    let articleElement = document.querySelector('article');
                    let mainElement = document.querySelector('main');
                    let bodyToConvert = document.body;

                    if (articleElement) {
                        bodyToConvert = articleElement;
                    } else if (mainElement) {
                        bodyToConvert = mainElement;
                    }

                    var markdown = turndownService.turndown(bodyToConvert.innerHTML);
                    saveMarkdown(markdown, (document.title || 'page') + '.md');
                } catch (e) {
                    console.error("Error in SAVE_MARKDOWN:", e);
                    alert("An error occurred while trying to save as Markdown: " + e.message);
                }
            }
        },
        {
            name: "♓ Get it at Harvard!",
            code: function() {
                location.href = "http://ezp-prod1.hul.harvard.edu/login?url=" + encodeURIComponent(location.href);
            }
        },
        {
            name: "⤵️ sortScholar",
            code: function() {
                function extractCitations(text) {
                    const match = text.match(/Cited by (\d+)/);
                    return match ? parseInt(match[1]) : 0;
                }
                function sortResultsByCitations() {
                    const container = document.querySelector('#gs_res_ccl_mid');
                    if (!container) {
                        console.log('sortScholar: Not a Google Scholar results page or container not found.');
                        return;
                    }
                    const results = Array.from(container.children);
                    const resultsWithCitations = results.map(result => {
                        const citeElement = result.querySelector('.gs_fl a[href*="cites"]');
                        const citeText = citeElement ? citeElement.innerText : (result.innerText || "");
                        const citations = extractCitations(citeText);
                        return { element: result, citations };
                    });
                    resultsWithCitations.sort((a, b) => b.citations - a.citations);
                    while (container.firstChild) {
                        container.removeChild(container.firstChild);
                    }
                    resultsWithCitations.forEach(({ element }) => container.appendChild(element));
                }
                sortResultsByCitations();
            }
        },
        // --- Added Buttons ---
        {
            name: "💬 Talk to ChatGPT",
            code: function() {
                var selection = window.getSelection().toString().trim();
                var queryText;
                if (selection) {
                    queryText = "Read the text:\n\n\"" + selection + "\"\n\nand ";
                } else {
                    queryText = "Read the page (" + location.href + ") and ";
                }
                // Note: chat.openai.com's handling of URL parameters for prompts can be inconsistent or change.
                location.href = "https://chat.openai.com/?q=" + encodeURIComponent(queryText);
            }
        },
        {
            name: "💡 Talk to Gemini",
            code: function() {
                var selection = window.getSelection().toString().trim();
                var queryText;
                if (selection) {
                    queryText = "Read the text:\n\n\"" + selection + "\"\n\nand ";
                } else {
                    queryText = "Read the page (" + location.href + ") and ";
                }
                location.href = "https://gemini.google.com/app?prompt=" + encodeURIComponent(queryText);
            }
        }
    ];

    // --- Create Menu Trigger ---
    const menuTrigger = document.createElement('div');
    menuTrigger.id = 'custom-bm-menu-trigger';
    menuTrigger.textContent = '📟'; // You can use any icon/text
    document.body.appendChild(menuTrigger);

    // --- Create Menu Container ---
    const menuContainer = document.createElement('div');
    menuContainer.id = 'custom-bm-menu-container';
    document.body.appendChild(menuContainer);

    // --- Populate Menu ---
    bookmarklets.forEach(bm => {
        const menuItem = document.createElement('a');
        menuItem.href = '#'; // Prevent page jump
        menuItem.textContent = bm.name;
        menuItem.className = 'custom-bm-menu-item';
        menuItem.addEventListener('click', function(event) {
            event.preventDefault();
            try {
                bm.code();
            } catch (e) {
                console.error("Error executing bookmarklet '" + bm.name + "':", e);
                alert("Error in bookmarklet '" + bm.name + "': " + e.message);
            }
            menuContainer.style.display = 'none'; // Hide menu after click
        });
        menuContainer.appendChild(menuItem);
    });

    // --- Toggle Menu ---
    menuTrigger.addEventListener('click', function(event) {
        event.stopPropagation(); // Prevent click from closing menu immediately if bubbling
        if (menuContainer.style.display === 'block') {
            menuContainer.style.display = 'none';
        } else {
            menuContainer.style.display = 'block';
        }
    });

    // Close menu if clicking outside
    document.addEventListener('click', function(event) {
        if (!menuContainer.contains(event.target) && !menuTrigger.contains(event.target)) {
            menuContainer.style.display = 'none';
        }
    });

    // --- Add Styles ---
    GM_addStyle(`
        #custom-bm-menu-trigger {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: rgba(205,205,205,0.7);
            color: white; /* Icon color - changed from black to white for better visibility on dark semi-transparent background */
            padding: 10px 15px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 20px;
            z-index: 99998;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
            user-select: none;
        }
        #custom-bm-menu-container {
            display: none;
            position: fixed;
            bottom: 80px; /* Adjust based on trigger size and desired spacing */
            right: 20px;
            background-color: white;
            border: 1px solid #ccc;
            border-radius: 5px;
            z-index: 99999;
            box-shadow: 0 2px 15px rgba(0,0,0,0.15);
            padding: 5px 0;
        }
        .custom-bm-menu-item {
            display: block;
            padding: 10px 20px;
            text-decoration: none;
            color: #333;
            white-space: nowrap;
        }
        .custom-bm-menu-item:hover {
            background-color: #f0f0f0;
            color: #000;
        }
    `);

})();
